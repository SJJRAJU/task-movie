{"version":3,"sources":["Components/Card/CardComponent.js","Components/MyMovieList/MyMovieList1.js","Components/Filter/Filter.js","Components/MovieList/MovieList1.js","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","MovieCard","addToMyList","movie","useState","watched","setWatched","classes","Card","className","CardActionArea","CardMedia","component","height","title","image","poster","CardContent","Typography","gutterBottom","variant","color","year","CardActions","Button","onClick","props","theme","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","MyMovieList","listMovie","removeFromMyList","GridList","cellHeight","gridList","cols","map","myMovie","GridListTile","key","id","formControl","margin","minWidth","selectEmpty","marginTop","Filter","FormControl","InputLabel","Select","labelId","value","onChange","handleChange","MenuItem","display","flexWrap","justifyContent","overflow","MovieList1","setMovie","setYear","checkedMovie","setCheckedMovie","url","fetchMovies","a","Axios","get","data","allMovie","Search","Title","Poster","Year","imdbID","useEffect","event","movieYear","target","onClicked","e","checked","console","log","App","setListMovie","findIndex","array","MyMovieList1","filter","singleMovie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04cf756b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n  },\r\n});\r\n\r\nexport default function MovieCard({ addToMyList, movie }) {\r\n  const [watched, setWatched] = useState(\"\");\r\n\r\n  function handleWatched(props) {\r\n    if (watched === \"\") {\r\n      setWatched(\"Watched\");\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"140\"\r\n          title={movie.title}\r\n          image={movie.poster}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom>{movie.title}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Year: {movie.year} <br />\r\n            <span>{watched}</span>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button onClick={handleWatched}> Movie Watched</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport GridList from \"@material-ui/core/GridList\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MovieCard from \"../Card/CardComponent\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst MyMovieList = ({ listMovie, removeFromMyList }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={500} className={classes.gridList} cols={3}>\r\n        {listMovie &&\r\n          listMovie.map((myMovie) => (\r\n            <GridListTile key={myMovie.id}>\r\n              <MovieCard movie={myMovie} />\r\n              <Button onClick={() => removeFromMyList(myMovie)}>\r\n                Remove From My List{\" \"}\r\n              </Button>\r\n            </GridListTile>\r\n          ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMovieList;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Filter(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Year</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={props.year}\r\n          onChange={props.handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={2000}>2000</MenuItem>\r\n          <MenuItem value={2001}>2001</MenuItem>\r\n          <MenuItem value={2002}>2002</MenuItem>\r\n          <MenuItem value={2003}>2003</MenuItem>\r\n          <MenuItem value={2004}>2004</MenuItem>\r\n          <MenuItem value={2005}>2005</MenuItem>\r\n          <MenuItem value={2006}>2006</MenuItem>\r\n          <MenuItem value={2007}>2007</MenuItem>\r\n          <MenuItem value={2008}>2008</MenuItem>\r\n          <MenuItem value={2009}>2009</MenuItem>\r\n          <MenuItem value={2010}>2010</MenuItem>\r\n          <MenuItem value={2011}>2011</MenuItem>\r\n          <MenuItem value={2012}>2012</MenuItem>\r\n          <MenuItem value={2013}>2013</MenuItem>\r\n          <MenuItem value={2014}>2014</MenuItem>\r\n          <MenuItem value={2015}>2015</MenuItem>\r\n          <MenuItem value={2016}>2016</MenuItem>\r\n          <MenuItem value={2017}>2017</MenuItem>\r\n          <MenuItem value={2019}>2018</MenuItem>\r\n          <MenuItem value={2019}>2019</MenuItem>\r\n          <MenuItem value={2020}>2020</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport MovieCard from \"../Card/CardComponent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n  },\r\n}));\r\n\r\nconst MovieList1 = ({ addToMyList }) => {\r\n  const [movie, setMovie] = useState([]);\r\n  const [year, setYear] = useState(\"\");\r\n  const [checkedMovie, setCheckedMovie] = useState([]);\r\n  let url =\r\n    \"http://www.omdbapi.com/?apikey=32395055&type=movie&s=bad\" + \"&Y=\" + year;\r\n  const handleAddMovie = (e, movie, checked) => {\r\n    setCheckedMovie([...checkedMovie]);\r\n    if (e.target.checked) {\r\n      console.log(\"clicked\");\r\n      setCheckedMovie([...checkedMovie, movie]);\r\n    }\r\n    console.log([checkedMovie]);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const movieYear = event.target.value;\r\n    setYear(movieYear);\r\n  };\r\n\r\n  const fetchMovies = async () => {\r\n    const { data } = await Axios.get(url);\r\n\r\n    const movies = data;\r\n\r\n    const allMovie = movies.Search.map((movie) => ({\r\n      title: movie.Title,\r\n      poster: movie.Poster,\r\n      year: movie.Year,\r\n      id: movie.imdbID,\r\n    }));\r\n    setMovie(allMovie);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [url]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Filter\r\n        year={year}\r\n        handleChange={handleChange}\r\n        onClicked={handleAddMovie}\r\n      />\r\n      <GridList cellHeight={500} className={classes.gridList} cols={3}>\r\n        {movie.map((movie) => (\r\n          <GridListTile key={movie.id}>\r\n            <MovieCard movie={movie} addToMyList={addToMyList} />\r\n            <Button onClick={() => addToMyList(movie)}> Add To My List</Button>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList1;\r\n","import React, { useState } from \"react\";\n\nimport MyMovieList1 from \"./Components/MyMovieList/MyMovieList1\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport MovieList1 from \"./Components/MovieList/MovieList1\";\n\nfunction App() {\n  const [listMovie, setListMovie] = useState([]);\n\n  const addToMyList = (myMovie) => {\n    const isAlreadyMoved = listMovie.findIndex(function (array) {\n      return array.id === myMovie.id;\n    });\n    if (isAlreadyMoved !== -1) {\n      console.log(\"already added\");\n    }\n    setListMovie([...listMovie, myMovie]);\n  };\n\n  const removeFromMyList = (myMovie) => {\n    setListMovie(\n      listMovie.filter((singleMovie) => singleMovie.id !== myMovie.id)\n    );\n  };\n  return (\n    <div>\n      <GridList cellHeight={1500} cols={2}>\n        <GridListTile>\n          <MovieList1 addToMyList={addToMyList} />\n        </GridListTile>\n        <GridListTile>\n          <MyMovieList1\n            listMovie={listMovie}\n            removeFromMyList={removeFromMyList}\n          />\n        </GridListTile>\n      </GridList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}