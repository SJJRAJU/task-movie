{"version":3,"sources":["Components/CheckBox/Checkbox.js","Components/Card/CardComponent.js","Components/MyMovieList/MyMovieList1.js","Components/Filter/Filter.js","Components/MovieList/MovieList1.js","App.js","index.js"],"names":["CheckBox","movie","checked","handleCheck","Checkbox","onChange","inputProps","useStyles","makeStyles","root","maxWidth","MovieCard","watched","classes","Card","className","CardActionArea","CardMedia","component","height","title","image","poster","CardContent","Typography","gutterBottom","variant","color","year","CardActions","theme","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","MyMovieList","listMovie","removeFromMyList","GridList","cellHeight","gridList","cols","map","myMovie","GridListTile","key","id","Button","onClick","formControl","margin","minWidth","selectEmpty","marginTop","Filter","props","FormControl","InputLabel","Select","labelId","value","handleChange","MenuItem","display","flexWrap","justifyContent","overflow","MovieList1","addToMyList","handleWatched","useState","setMovie","setYear","url","fetchMovies","a","Axios","get","data","allMovie","Search","Title","Poster","Year","imdbID","useEffect","event","movieYear","target","App","setListMovie","setChecked","checkedMovie","setCheckedMovie","setWatched","console","log","MyMovieList1","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af1b42a5.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nconst CheckBox = ({ movie, checked, handleCheck }) => {\r\n  return (\r\n    <Checkbox\r\n      checked={checked}\r\n      onChange={handleCheck}\r\n      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CheckBox from \"../CheckBox/Checkbox\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 300,\r\n  },\r\n});\r\n\r\nexport default function MovieCard({ movie, handleCheck, checked, watched }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"140\"\r\n          title={movie.title}\r\n          image={movie.poster}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom>{movie.title}</Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Year: {movie.year} <br />\r\n            <span>{watched}</span>\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <CheckBox movie={movie} handleCheck={handleCheck} />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport GridList from \"@material-ui/core/GridList\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MovieCard from \"../Card/CardComponent\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nconst MyMovieList = ({ handleCheck, watched, listMovie, removeFromMyList }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridList cellHeight={500} className={classes.gridList} cols={3}>\r\n        {listMovie.map((myMovie) => (\r\n          <GridListTile key={myMovie.id}>\r\n            <MovieCard\r\n              movie={myMovie}\r\n              handleCheck={handleCheck}\r\n              watched={watched}\r\n            />\r\n            <Button onClick={() => removeFromMyList(myMovie)}>\r\n              Remove From My List{\" \"}\r\n            </Button>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMovieList;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Filter(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"filled\" className={classes.formControl}>\r\n        <InputLabel id=\"demo-simple-select-filled-label\">Year</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-filled-label\"\r\n          id=\"demo-simple-select-filled\"\r\n          value={props.year}\r\n          onChange={props.handleChange}\r\n        >\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={2000}>2000</MenuItem>\r\n          <MenuItem value={2001}>2001</MenuItem>\r\n          <MenuItem value={2002}>2002</MenuItem>\r\n          <MenuItem value={2003}>2003</MenuItem>\r\n          <MenuItem value={2004}>2004</MenuItem>\r\n          <MenuItem value={2005}>2005</MenuItem>\r\n          <MenuItem value={2006}>2006</MenuItem>\r\n          <MenuItem value={2007}>2007</MenuItem>\r\n          <MenuItem value={2008}>2008</MenuItem>\r\n          <MenuItem value={2009}>2009</MenuItem>\r\n          <MenuItem value={2010}>2010</MenuItem>\r\n          <MenuItem value={2011}>2011</MenuItem>\r\n          <MenuItem value={2012}>2012</MenuItem>\r\n          <MenuItem value={2013}>2013</MenuItem>\r\n          <MenuItem value={2014}>2014</MenuItem>\r\n          <MenuItem value={2015}>2015</MenuItem>\r\n          <MenuItem value={2016}>2016</MenuItem>\r\n          <MenuItem value={2017}>2017</MenuItem>\r\n          <MenuItem value={2019}>2018</MenuItem>\r\n          <MenuItem value={2019}>2019</MenuItem>\r\n          <MenuItem value={2020}>2020</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport MovieCard from \"../Card/CardComponent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport CheckBox from \"../CheckBox/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n  },\r\n}));\r\n\r\nconst MovieList1 = ({\r\n  addToMyList,\r\n  handleWatched,\r\n  handleCheck,\r\n  checked,\r\n  watched,\r\n}) => {\r\n  const [movie, setMovie] = useState([]);\r\n  const [year, setYear] = useState(\"\");\r\n\r\n  let url = `http://www.omdbapi.com/?apikey=32395055&type=movie&s=bad&Y=${year}`;\r\n\r\n  const handleChange = (event) => {\r\n    const movieYear = event.target.value;\r\n    setYear(movieYear);\r\n  };\r\n\r\n  const fetchMovies = async () => {\r\n    const { data } = await Axios.get(url);\r\n\r\n    const movies = data;\r\n\r\n    const allMovie = movies.Search.map((movie) => ({\r\n      title: movie.Title,\r\n      poster: movie.Poster,\r\n      year: movie.Year,\r\n      id: movie.imdbID,\r\n    }));\r\n    setMovie(allMovie);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [fetchMovies]);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Filter year={year} handleChange={handleChange} />\r\n      <Button onClick={() => handleWatched(movie)}> Movie Watched</Button>\r\n      <button onClick={() => addToMyList(movie)}>AddMyList</button>\r\n      <GridList cellHeight={500} className={classes.gridList} cols={3}>\r\n        {movie.map((movie) => (\r\n          <GridListTile key={movie.id}>\r\n            <MovieCard\r\n              movie={movie}\r\n              checked={checked}\r\n              handleCheck={() => handleCheck(movie)}\r\n            />\r\n            <Button> Add To My List</Button>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList1;\r\n","import React, { useState } from \"react\";\n\nimport MyMovieList1 from \"./Components/MyMovieList/MyMovieList1\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport MovieList1 from \"./Components/MovieList/MovieList1\";\n\nfunction App() {\n  const [listMovie, setListMovie] = useState([]);\n  const [checked, setChecked] = useState(false);\n  const [checkedMovie, setCheckedMovie] = useState([]);\n  const [watched, setWatched] = useState(\"\");\n  const handleCheck = (myMovie) => {\n    setChecked(true);\n    if (checked !== true) {\n      console.log(\"notchecked\");\n    }\n    setChecked(false);\n    setCheckedMovie([...checkedMovie, myMovie]);\n\n    \n  };\n\n  const addToMyList = () => {\n    setListMovie([...checkedMovie]);\n    setWatched(\"\");\n   \n  };\n\n  function handleWatched(props) {\n    if (watched === \"\") {\n      setListMovie([...checkedMovie]);\n      setWatched(\"Watched\");\n    }\n  }\n  console.log(listMovie);\n\n  const removeFromMyList = (myMovie) => {\n    setListMovie(\n      listMovie.filter((singleItem) => singleItem.id !== myMovie.id)\n    );\n  };\n\n  return (\n    <div>\n      <GridList cellHeight={1500} cols={2}>\n        <GridListTile>\n          <MovieList1\n            addToMyList={addToMyList}\n            handleCheck={handleCheck}\n            checked={checked}\n            handleWatched={handleWatched}\n          />\n        </GridListTile>\n        <GridListTile>\n          <MyMovieList1\n            listMovie={listMovie}\n            checkedMovie={checkedMovie}\n            watched={watched}\n          />\n        </GridListTile>\n      </GridList>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}